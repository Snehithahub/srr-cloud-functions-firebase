"use strict";
const functions = require("firebase-functions");
const {WebhookClient} = require("dialogflow-fulfillment");
const admin = require("firebase-admin");
const serviceAccount = require("/home/guest/Downloads/security.json");

admin.initializeApp({
  credential: admin.credential.cert(serviceAccount),
});

const db = admin.database();

/**
 * HTTP Cloud Function that handles Dialogflow webhook requests.
 *
 * @param {Object} request - The request object from Dialogflow.
 * @param {Object} response - The response object to send back to Dialogflow.
 * @return {void}
 */
exports.dialogflowFirebaseFulfillment = functions.https.onRequest(
    (request, response) => {
      const agent = new WebhookClient({request, response});
      console.log("Df headers: " + JSON.stringify(request.headers));
      console.log("Df body: " + JSON.stringify(request.body));

      /**
   * Handler for the Default Welcome Intent
   * @param {Object} agent - The Dialogflow agent
   * @return {void}
   */

      function welcome(agent) {
        agent.add(`Welcome to my agent!`);
      }
      /**
   * Handler for the Default Fallback Intent
   * @param {Object} agent - The Dialogflow agent
   * @return {void}
   */
      function fallback(agent) {
        agent.add(`I am sorry!Please contact team members for support.`);
        agent.add(`I'm sorry, can you try again?`);
      }

      /**
   * Handler to write data to Firebase Realtime Database
   * @param {Object} agent - The Dialogflow agent
   * @return {Promise<void>}
   */

      function writeData(agent) {
        const name = agent.parameters.name;
        const email = agent.parameters.email;
        const userId = agent.session.split("/").pop();
        return db.ref("users/" + userId).set({
          username: name,
          email: email,
        }).then(() => {
          agent.add(`Thanks, ${name}. Your email ${email} has been saved.`);
        }).catch((error) => {
          console.error("Error writing to database: ", error);
          agent.add(`Failed to save your information to the database.`);
        });
      }
      /**
   * Handler to read data from Firebase Realtime Database
   * @param {Object} agent - The Dialogflow agent
   * @return {Promise<void>}
   */
      function readData(agent) {
        // Using session ID as the user ID
        const userId = agent.session.split("/").pop();

        return db.ref("users/" + userId).once("value").then((snapshot) => {
          const userData = snapshot.val();
          if (userData) {
            agent.add(` about you: ${userData.username}, ${userData.email}`);
          } else {
            agent.add(`No data found for you.`);
          }
        }).catch((error) => {
          console.error("Error reading from database: ", error);
          agent.add(`Failed to read your data from the database.`);
        });
      }

      const intentMap = new Map();
      intentMap.set("Default Welcome Intent", welcome);
      intentMap.set("Default Fallback Intent", fallback);
      intentMap.set("Collect User Data", writeData);
      intentMap.set("Read User Data", readData);

      agent.handleRequest(intentMap);
    });
